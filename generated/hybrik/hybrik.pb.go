// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hybrik.proto

package hybrik

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobRequest struct {
	JobId                int64    `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobRequest) Reset()         { *m = JobRequest{} }
func (m *JobRequest) String() string { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()    {}
func (*JobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hybrik_825ae88366065a16, []int{0}
}
func (m *JobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRequest.Unmarshal(m, b)
}
func (m *JobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRequest.Marshal(b, m, deterministic)
}
func (dst *JobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRequest.Merge(dst, src)
}
func (m *JobRequest) XXX_Size() int {
	return xxx_messageInfo_JobRequest.Size(m)
}
func (m *JobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobRequest proto.InternalMessageInfo

func (m *JobRequest) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

type JobResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobResponse) Reset()         { *m = JobResponse{} }
func (m *JobResponse) String() string { return proto.CompactTextString(m) }
func (*JobResponse) ProtoMessage()    {}
func (*JobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_hybrik_825ae88366065a16, []int{1}
}
func (m *JobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResponse.Unmarshal(m, b)
}
func (m *JobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResponse.Marshal(b, m, deterministic)
}
func (dst *JobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResponse.Merge(dst, src)
}
func (m *JobResponse) XXX_Size() int {
	return xxx_messageInfo_JobResponse.Size(m)
}
func (m *JobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobResponse proto.InternalMessageInfo

func (m *JobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type Job struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Started              int64    `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
	Finished             int64    `protobuf:"varint,5,opt,name=finished,proto3" json:"finished,omitempty"`
	Progress             int32    `protobuf:"varint,6,opt,name=progress,proto3" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_hybrik_825ae88366065a16, []int{2}
}
func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (dst *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(dst, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Job) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetStarted() int64 {
	if m != nil {
		return m.Started
	}
	return 0
}

func (m *Job) GetFinished() int64 {
	if m != nil {
		return m.Finished
	}
	return 0
}

func (m *Job) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func init() {
	proto.RegisterType((*JobRequest)(nil), "hybrik.JobRequest")
	proto.RegisterType((*JobResponse)(nil), "hybrik.JobResponse")
	proto.RegisterType((*Job)(nil), "hybrik.Job")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HybrikClient is the client API for Hybrik service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HybrikClient interface {
	GetJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error)
}

type hybrikClient struct {
	cc *grpc.ClientConn
}

func NewHybrikClient(cc *grpc.ClientConn) HybrikClient {
	return &hybrikClient{cc}
}

func (c *hybrikClient) GetJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error) {
	out := new(JobResponse)
	err := c.cc.Invoke(ctx, "/hybrik.Hybrik/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HybrikServer is the server API for Hybrik service.
type HybrikServer interface {
	GetJob(context.Context, *JobRequest) (*JobResponse, error)
}

func RegisterHybrikServer(s *grpc.Server, srv HybrikServer) {
	s.RegisterService(&_Hybrik_serviceDesc, srv)
}

func _Hybrik_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybrikServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hybrik.Hybrik/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybrikServer).GetJob(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hybrik_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hybrik.Hybrik",
	HandlerType: (*HybrikServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJob",
			Handler:    _Hybrik_GetJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hybrik.proto",
}

func init() { proto.RegisterFile("hybrik.proto", fileDescriptor_hybrik_825ae88366065a16) }

var fileDescriptor_hybrik_825ae88366065a16 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4f, 0x84, 0x30,
	0x14, 0x84, 0x2d, 0x2c, 0x55, 0x1f, 0xc6, 0xc3, 0x33, 0x9a, 0xba, 0x89, 0x09, 0xc1, 0x0b, 0x31,
	0x86, 0xc3, 0xee, 0xd9, 0xcb, 0x5e, 0xd4, 0x3d, 0x6d, 0xf8, 0x03, 0x86, 0x4a, 0x75, 0xc1, 0xc0,
	0xc3, 0xb6, 0x7b, 0xf0, 0x77, 0xf8, 0x87, 0x4d, 0x5b, 0x24, 0x7a, 0xeb, 0x37, 0x33, 0x99, 0x4c,
	0x1f, 0x9c, 0xed, 0xbf, 0xa4, 0x6e, 0x3f, 0xca, 0x51, 0x93, 0x25, 0xe4, 0x81, 0xf2, 0x5b, 0x80,
	0x2d, 0xc9, 0x4a, 0x7d, 0x1e, 0x94, 0xb1, 0x78, 0x09, 0xbc, 0x23, 0xf9, 0xd2, 0x36, 0x82, 0x65,
	0xac, 0x88, 0xab, 0xa4, 0x23, 0xf9, 0xdc, 0xe4, 0xf7, 0x90, 0xfa, 0x90, 0x19, 0x69, 0x30, 0x0a,
	0x6f, 0x20, 0xee, 0x48, 0xfa, 0x48, 0xba, 0x4a, 0xcb, 0xa9, 0xd7, 0x25, 0x9c, 0x9e, 0x7f, 0x33,
	0x88, 0xb7, 0x24, 0xf1, 0x1c, 0xa2, 0xb9, 0x28, 0x6a, 0x1b, 0x44, 0x58, 0x0c, 0x75, 0xaf, 0x44,
	0x94, 0xb1, 0xe2, 0xb4, 0xf2, 0x6f, 0xbc, 0x02, 0x6e, 0x6c, 0x6d, 0x0f, 0x46, 0xc4, 0x5e, 0x9d,
	0x08, 0x05, 0x1c, 0x1b, 0x5b, 0x6b, 0xab, 0x1a, 0xb1, 0xf0, 0x05, 0xbf, 0x88, 0x4b, 0x38, 0x79,
	0x6b, 0x87, 0xd6, 0xec, 0x55, 0x23, 0x12, 0x6f, 0xcd, 0xec, 0xbc, 0x51, 0xd3, 0xbb, 0x56, 0xc6,
	0x08, 0x9e, 0xb1, 0x22, 0xa9, 0x66, 0x5e, 0x3d, 0x00, 0x7f, 0xf2, 0x43, 0x71, 0x0d, 0xfc, 0x51,
	0x59, 0xb7, 0x10, 0xff, 0x6e, 0x0f, 0x27, 0x58, 0x5e, 0xfc, 0xd3, 0xc2, 0x8f, 0xf3, 0xa3, 0xcd,
	0x1d, 0x5c, 0xbf, 0x52, 0x5f, 0x0e, 0x6a, 0xb0, 0x65, 0x5f, 0xf7, 0xe1, 0x8a, 0x53, 0x74, 0x93,
	0x86, 0xe6, 0x9d, 0xd3, 0x76, 0x4c, 0x72, 0x6f, 0xae, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x22,
	0xf1, 0x06, 0xa5, 0x72, 0x01, 0x00, 0x00,
}
